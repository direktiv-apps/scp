url: ""
functions:
- type: knative-workflow
  id: scp
  image: direktiv.azurecr.io/functions/scp:test
states:
- id: state0
  type: action
  catch:
  - error: io.direktiv.command.error
  action:
    function: get
    input:
      scp:
      - source:
          file: payload
        target:
          file: /tmp/myfile
          host: ec2-11-111-99-99.compute-1.amazonaws.com
          identity: jq(.secrets.sshkey)
          user: ubuntu
    secrets:
    - sshkey
    files:
    - key: payload
      scope: workflow
  transition: state1
- id: state1
  type: action
  catch:
  - error: io.direktiv.command.error
  action:
    function: get
    input:
      scp:
      - source:
          file: /tmp/hello1
          host: ec2-11-111-99-99.compute-1.amazonaws.com
          identity: jq(.secrets.sshkey)
          user: ubuntu
        target:
          file: /tmp/myfile
          host: ec2-11-111-99-100.compute-1.amazonaws.com
          identity: jq(.secrets.sshkey)
          user: ubuntu
    secrets:
    - sshkey
  transition: state2
- id: state2
  type: action
  catch:
  - error: io.direktiv.command.error
  action:
    function: get
    input:
      scp:
      - source:
          file: /tmp/hello1
          host: ec2-11-111-99-99.compute-1.amazonaws.com
          identity: jq(.secrets.sshkey)
          user: ubuntu
        target:
          file: file1
      - source:
          file: file1
        target:
          file: /tmp/targetfile
          host: 192.168.1.1
          password: jq(.secrets.scppwd)
          user: direktiv
    secrets:
    - sshkey
    - scppwd
    files:
    - key: whatever
      as: payload
      scope: workflow
  transition: state3
- id: state3
  type: action
  catch:
  - error: io.direktiv.command.error
  action:
    function: get
    input:
      scp:
      - source:
          file: /tmp/file
          host: 10.100.6.8
          password: jq(.secrets.scppwd)
          user: direktiv
        target:
          file: out/workflow/myfile.txt
    secrets:
    - scpkey
    - scppwd
    files:
    - key: whatever
      as: payload
      scope: workflow
