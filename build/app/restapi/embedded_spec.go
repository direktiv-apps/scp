// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run scp in Direktiv",
    "title": "scp",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "unknown"
      ],
      "container": "direktiv.azurecr.io/functions/scp",
      "issues": "https://github.com/direktiv-apps/scp/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "Run scp in Direktiv as a function",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/scp"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "default": {
                "identity": {
                  "data": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW\nQyNTUxOQAAACBoPIBpfkrH+d1mKZXmYIOklPE8180Fpkqp4Tb2m/weHAAAAJA4vIewOLyH\nsAAAAAtzc2gtZWQyNTUxOQAAACBoPIBpfkrH+d1mKZXmYIOklPE8180Fpkqp4Tb2m/weHA\nAAAED1FLdxsMggcj9GGV9BMktGHfZSfD0nbLCyehBj8MZw02g8gGl+Ssf53WYpleZgg6SU\n8TzXzQWmSqnhNvab/B4cAAAABm5vbmFtZQECAwQFBgc=\n-----END OPENSSH PRIVATE KEY-----",
                  "mode": "0600",
                  "name": "id"
                },
                "payload": {
                  "data": "Hello, world!\n",
                  "name": "payload"
                },
                "recursive": false,
                "source": "payload",
                "target": "myuser@192.168.1.10:/home/myuser/Downloads/payload",
                "verbose": false
              },
              "required": [
                "source",
                "target",
                "identity"
              ],
              "properties": {
                "identity": {
                  "$ref": "#/definitions/direktivFile"
                },
                "payload": {
                  "$ref": "#/definitions/direktivFile"
                },
                "recursive": {
                  "type": "boolean"
                },
                "source": {
                  "type": "string"
                },
                "target": {
                  "type": "string"
                },
                "verbose": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "type": "object",
              "properties": {
                "scp": {
                  "type": "object",
                  "required": [
                    "success"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "examples": {
              "scp": {
                "success": true
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "scp {{- if (deref .Verbose) }} -v {{- end }} -B {{- if (deref .Recursive) }} -r {{- end }} -i {{ .Identity.Name }} -o StrictHostKeyChecking=accept-new {{ .Source }} {{ .Target }}"
            }
          ],
          "output": "{\n  \"scp\": {\n    \"success\": true\n  }\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    input: \n      source: payload \n      target: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      payload:\n        name: payload\n        data: 'Hello, world!\\n'\n      recursive: false\n      verbose: false",
            "title": "Send payload from state data."
          },
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    files: \n    - key: payload\n      scope: namespace\n      as: payload\n    input: \n      source: payload \n      target: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      recursive: false\n      verbose: false",
            "title": "Send payload from variable file."
          },
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    input: \n      source: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      target: payload\n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      recursive: false\n      verbose: false ",
            "title": "Get data from remote host and store in a variable file."
          },
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    input: \n      source: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      target: \"myuser@192.168.1.11:/home/myuser/Downloads/payload\" \n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      recursive: false\n      verbose: false      ",
            "title": "Move data between two remote hosts."
          }
        ],
        "x-direktiv-function": "functions:\n- id: scp\n  image: direktiv.azurecr.io/functions/scp:1.0\n  type: knative-workflow",
        "x-direktiv-secrets": [
          {
            "description": "Plain string of an ssh key with permission to access remote hosts.",
            "name": "sshkey"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run scp in Direktiv",
    "title": "scp",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "unknown"
      ],
      "container": "direktiv.azurecr.io/functions/scp",
      "issues": "https://github.com/direktiv-apps/scp/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "Run scp in Direktiv as a function",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/scp"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/postParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "$ref": "#/definitions/postOKBody"
            },
            "examples": {
              "scp": {
                "success": true
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "scp {{- if (deref .Verbose) }} -v {{- end }} -B {{- if (deref .Recursive) }} -r {{- end }} -i {{ .Identity.Name }} -o StrictHostKeyChecking=accept-new {{ .Source }} {{ .Target }}"
            }
          ],
          "output": "{\n  \"scp\": {\n    \"success\": true\n  }\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    input: \n      source: payload \n      target: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      payload:\n        name: payload\n        data: 'Hello, world!\\n'\n      recursive: false\n      verbose: false",
            "title": "Send payload from state data."
          },
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    files: \n    - key: payload\n      scope: namespace\n      as: payload\n    input: \n      source: payload \n      target: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      recursive: false\n      verbose: false",
            "title": "Send payload from variable file."
          },
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    input: \n      source: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      target: payload\n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      recursive: false\n      verbose: false ",
            "title": "Get data from remote host and store in a variable file."
          },
          {
            "content": "- id: scp\n  type: action\n  action:\n    function: scp\n    secrets:\n    - SSHKEY\n    input: \n      source: \"myuser@192.168.1.10:/home/myuser/Downloads/payload\" \n      target: \"myuser@192.168.1.11:/home/myuser/Downloads/payload\" \n      identity: \n        name: id\n        data: 'jq(.secrets.SSHKEY)'\n        mode: \"0600\"\n      recursive: false\n      verbose: false      ",
            "title": "Move data between two remote hosts."
          }
        ],
        "x-direktiv-function": "functions:\n- id: scp\n  image: direktiv.azurecr.io/functions/scp:1.0\n  type: knative-workflow",
        "x-direktiv-secrets": [
          {
            "description": "Plain string of an ssh key with permission to access remote hosts.",
            "name": "sshkey"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "postOKBody": {
      "type": "object",
      "properties": {
        "scp": {
          "$ref": "#/definitions/postOKBodyScp"
        }
      },
      "x-go-gen-location": "operations"
    },
    "postOKBodyScp": {
      "type": "object",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBody": {
      "type": "object",
      "default": {
        "identity": {
          "data": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW\nQyNTUxOQAAACBoPIBpfkrH+d1mKZXmYIOklPE8180Fpkqp4Tb2m/weHAAAAJA4vIewOLyH\nsAAAAAtzc2gtZWQyNTUxOQAAACBoPIBpfkrH+d1mKZXmYIOklPE8180Fpkqp4Tb2m/weHA\nAAAED1FLdxsMggcj9GGV9BMktGHfZSfD0nbLCyehBj8MZw02g8gGl+Ssf53WYpleZgg6SU\n8TzXzQWmSqnhNvab/B4cAAAABm5vbmFtZQECAwQFBgc=\n-----END OPENSSH PRIVATE KEY-----",
          "mode": "0600",
          "name": "id"
        },
        "payload": {
          "data": "Hello, world!\n",
          "name": "payload"
        },
        "recursive": false,
        "source": "payload",
        "target": "myuser@192.168.1.10:/home/myuser/Downloads/payload",
        "verbose": false
      },
      "required": [
        "source",
        "target",
        "identity"
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/direktivFile"
        },
        "payload": {
          "$ref": "#/definitions/direktivFile"
        },
        "recursive": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "verbose": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    }
  }
}`))
}
